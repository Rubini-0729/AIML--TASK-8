# -*- coding: utf-8 -*-
"""clustering with k-means

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XdqskuU4bVvUyhMSQVKRCWzJPorSm3ui
"""

# Step 1: Import libraries and load necessary features
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.metrics import silhouette_score

from google.colab import files
uploaded = files.upload()

import pandas as pd
df = pd.read_csv('Mall_Customers.csv')

# Select features for clustering
X = df[['Annual Income (k$)', 'Spending Score (1-100)']]
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

kmeans = KMeans(n_clusters=5, random_state=42)
df['Cluster'] = kmeans.fit_predict(X_scaled)

# View cluster distribution
print(df['Cluster'].value_counts())

inertia = []
for k in range(1, 11):
    km = KMeans(n_clusters=k, random_state=42)
    km.fit(X_scaled)
    inertia.append(km.inertia_)

plt.plot(range(1, 11), inertia, 'bo-')
plt.xlabel('Number of Clusters')
plt.ylabel('Inertia')
plt.title('Elbow Method')
plt.show()

pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)

plt.scatter(X_pca[:, 0], X_pca[:, 1], c=df['Cluster'], cmap='viridis')
plt.xlabel('PCA 1')
plt.ylabel('PCA 2')
plt.title('Customer Segments')
plt.colorbar(label='Cluster')
plt.show()

score = silhouette_score(X_scaled, df['Cluster'])
print(f'Silhouette Score: {score:.2f}')